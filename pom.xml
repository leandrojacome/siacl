<?xml version="1.0"?>
<project
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd"
	xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.github.leandrojacome.siacl</groupId>
	<artifactId>siacl</artifactId>
	<version>0.0.1</version>
	<properties>
		<compiler-plugin.version>3.8.1</compiler-plugin.version>
		<maven.compiler.parameters>true</maven.compiler.parameters>
		<java-version>11</java-version>
		<maven.compiler.source>${java-version}</maven.compiler.source>
		<maven.compiler.target>${java-version}</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<quarkus.platform.artifact-id>quarkus-universe-bom</quarkus.platform.artifact-id>
		<quarkus.platform.group-id>io.quarkus</quarkus.platform.group-id>
		<quarkus.platform.version>2.0.3.Final</quarkus.platform.version>
		<surefire-plugin.version>3.0.0-M5</surefire-plugin.version>
		<org.mapstruct.version>1.3.1.Final</org.mapstruct.version>
		<org.projectlombok.lombok>1.18.10</org.projectlombok.lombok>
		<jacoco.version>0.8.5</jacoco.version>
		<m2e.apt.activation>jdt_apt</m2e.apt.activation>
		<sonar.projectKey>leandrojacome_poc-siavi-quarkus</sonar.projectKey>
		<sonar.organization>leandrojacome</sonar.organization>
		<sonar.host.url>https://sonarcloud.io</sonar.host.url>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>${quarkus.platform.group-id}</groupId>
				<artifactId>${quarkus.platform.artifact-id}</artifactId>
				<version>${quarkus.platform.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<!-- DEPENDÊNCIAS QUARKUS -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-arc</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-resteasy</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-resteasy-jsonb</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-openapi</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-hibernate-validator</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-jdbc-postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-agroal</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-fault-tolerance</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-smallrye-health</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-oidc</artifactId>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-hibernate-orm-panache</artifactId>
		</dependency>
		<!-- DEPENDÊNCIA DE TERCEIROS -->
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<version>${org.projectlombok.lombok}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${org.mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct-processor</artifactId>
			<version>${org.mapstruct.version}</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-elytron-security-properties-file</artifactId>
		</dependency>
		<!-- DEPENDÊNCIAS DE TESTE -->
		<dependency>
			<groupId>io.quarkus</groupId>
			<artifactId>quarkus-junit5</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>io.rest-assured</groupId>
			<artifactId>rest-assured</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>junit-jupiter</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.testcontainers</groupId>
			<artifactId>postgresql</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.database-rider</groupId>
			<artifactId>rider-core</artifactId>
			<version>1.26.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.github.database-rider</groupId>
			<artifactId>rider-cdi</artifactId>
			<version>1.26.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>stax</groupId>
			<artifactId>stax</artifactId>
			<version>1.2.0</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>com.approvaltests</groupId>
			<artifactId>approvaltests</artifactId>
			<version>11.7.0</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<build>
		<plugins>
			<plugin>
				<groupId>${quarkus.platform.group-id}</groupId>
				<artifactId>quarkus-maven-plugin</artifactId>
				<version>${quarkus.platform.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>build</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${compiler-plugin.version}</version>
				<configuration>
					<parameters>${maven.compiler.parameters}</parameters>
					<compilerArgs>
						<compilerArg>-Alombok.addLombokGeneratedAnnotation=true</compilerArg>
						<compilerArg>-Alombok.anyConstructor.addConstructorProperties=true</compilerArg>
						<compilerArg>-Amapstruct.defaultComponentModel=cdi</compilerArg>
					</compilerArgs>
					<annotationProcessorPaths>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${org.mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.sonarsource.scanner.maven</groupId>
				<artifactId>sonar-maven-plugin</artifactId>
				<version>3.7.0.1746</version>
			</plugin>
			<plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>${surefire-plugin.version}</version>
				<configuration>
					<systemPropertyVariables>
						<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager>
						<maven.home>${maven.home}</maven.home>
					</systemPropertyVariables>
					<skip>true</skip>
				</configuration>
				<executions>
					<execution>
						<id>unit-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>${skipUnitTests}</skip>
							<includes>
								<include>**/*Test.java</include>
							</includes>
						</configuration>
					</execution>
					<execution>
						<id>quarkus-tests</id>
						<phase>test</phase>
						<goals>
							<goal>test</goal>
						</goals>
						<configuration>
							<skip>${skipQuarkusTests}</skip>
							<includes>
								<include>**/*IT.java</include>
							</includes>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>0.8.5</version>
				<configuration>
					<skip>${skipUnitTests}</skip>
				</configuration>
				<executions>
					<execution>
						<id>default-prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>default-report</id>
						<goals>
							<goal>report</goal>
						</goals>
						<phase>test</phase>
					</execution>
					<execution>
						<id>default-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>test</phase>
						<configuration>
							<rules>
								<rule>
									<element>PACKAGE</element>
									<excludes>
										<!-- DAO não entra no check pois não tem teste de unidade e os 
											testes de Quarkus o JaCoCo não pega a cobertura. -->
										<exclude>com.github.leandrojacome.dao</exclude>

										<!-- Domínio não entra pois são somente entidades. Entraria se 
											houvesse mais coisa. -->
										<exclude>com.github.leandrojacome.dominio</exclude>

										<!-- DTO não entra pois é um POJO com anotações. -->
										<exclude>com.github.leandrojacome.dto</exclude>

										<!-- Mapper não entra pois é só interface para nós, a implementação 
											é um framework. -->
										<exclude>com.github.leandrojacome.dto.mapper</exclude>
									</excludes>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>90%</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>90%</minimum>
										</limit>
									</limits>
								</rule>
								<rule>
									<element>PACKAGE</element>
									<excludes>
										<!-- DAO não entra no check pois não tem teste de unidade e os 
											testes de Quarkus o JaCoCo não pega a cobertura. -->
										<exclude>com.github.leandrojacome.dao</exclude>
									</excludes>
									<limits>
										<limit>
											<counter>CLASS</counter>
											<value>MISSEDCOUNT</value>
											<maximum>0</maximum>
										</limit>
									</limits>
								</rule>
								<rule>
									<element>PACKAGE</element>
									<excludes>
										<!-- DAO não entra no check pois não tem teste de unidade e os 
											testes de Quarkus o JaCoCo não pega a cobertura. -->
										<exclude>com.github.leandrojacome.dao</exclude>

										<!-- Domínio e DTO não entram pois tem muitos métodos get, set, 
											equals, hashCode, etc. -->
										<exclude>com.github.leandrojacome.dominio</exclude>
										<exclude>com.github.leandrojacome.dto</exclude>
									</excludes>
									<limits>
										<limit>
											<counter>METHOD</counter>
											<value>MISSEDCOUNT</value>
											<maximum>0</maximum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.pitest</groupId>
				<artifactId>pitest-maven</artifactId>
				<version>1.4.11</version>
				<executions>
					<execution>
						<id>teste-mutacao-unidade</id>
						<configuration>
							<mutationThreshold>90</mutationThreshold>
							<coverageThreshold>90</coverageThreshold>
							<testPlugin>junit5</testPlugin>
							<targetClasses>
								<param>com.github.leandrojacome.rest.*</param>
							</targetClasses>
							<targetTests>
								<param>com.github.leandrojacome.test.unidade.*</param>
							</targetTests>
							<skipTests>${skipTests}</skipTests>
							<skip>${skipMutationTests}</skip>
						</configuration>
						<goals>
							<goal>mutationCoverage</goal>
						</goals>
						<phase>test</phase>
					</execution>
				</executions>
				<dependencies>
					<dependency>
						<groupId>org.pitest</groupId>
						<artifactId>pitest-junit5-plugin</artifactId>
						<version>0.12</version>
					</dependency>
				</dependencies>
			</plugin>
			<plugin>
				<groupId>net.revelc.code.formatter</groupId>
				<artifactId>formatter-maven-plugin</artifactId>
				<version>2.11.0</version>
				<configuration>
					<configFile>${project.basedir}/ide-config/eclipse-format.xml</configFile>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>format</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>net.revelc.code</groupId>
				<artifactId>impsort-maven-plugin</artifactId>
				<version>1.3.2</version>
				<configuration>
					<groups>java.,javax.,org.,com.</groups>
				</configuration>
				<executions>
					<execution>
						<id>sort-imports</id>
						<goals>
							<goal>sort</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>
<!-- 	<profiles> -->
<!-- 		<profile> -->
<!-- 			<id>native</id> -->
<!-- 			<activation> -->
<!-- 				<property> -->
<!-- 					<name>native</name> -->
<!-- 				</property> -->
<!-- 			</activation> -->
<!-- 			<build> -->
<!-- 				<plugins> -->
<!-- 					<plugin> -->
<!-- 						<artifactId>maven-failsafe-plugin</artifactId> -->
<!-- 						<version>${surefire-plugin.version}</version> -->
<!-- 						<executions> -->
<!-- 							<execution> -->
<!-- 								<goals> -->
<!-- 									<goal>integration-test</goal> -->
<!-- 									<goal>verify</goal> -->
<!-- 								</goals> -->
<!-- 								<configuration> -->
<!-- 									<systemPropertyVariables> -->
<!-- 										<native.image.path>${project.build.directory}/${project.build.finalName}-runner</native.image.path> -->
<!-- 										<java.util.logging.manager>org.jboss.logmanager.LogManager</java.util.logging.manager> -->
<!-- 										<maven.home>${maven.home}</maven.home> -->
<!-- 									</systemPropertyVariables> -->
<!-- 								</configuration> -->
<!-- 							</execution> -->
<!-- 						</executions> -->
<!-- 					</plugin> -->
<!-- 				</plugins> -->
<!-- 			</build> -->
<!-- 			<properties> -->
<!-- 				<quarkus.package.type>native</quarkus.package.type> -->
<!-- 			</properties> -->
<!-- 		</profile> -->
<!-- 	</profiles> -->
</project>
